</main>
<aside class="aside">
  <section class="aside__profile">
    <span>My Linktree:</span>
    <a class="a a--myLink" href="/<%= usuario.nome_usuario%>"
      >https://linktr.ee/<%= usuario.nome_usuario%></a
    >
    <button id="button-share">Share</button>
  </section>
  <section id="fone">
    <section class="device-container">
      <div class="device-body device-body--background">
        <span>
          <div class="device-header">
            <img src="/img/default-profile.png" alt="Foto de Perfil">
            <span>@<%= usuario.nome_usuario%></span>
          </div>
        </span>
        <span>
          <% for (link of links ) { %>
            <div class="device-content">
              <a href="<%= link.url %>" target="_blank">
                <%= link.nome %>
              </a>
            </div>                         
            
          <% } %>
        </span>
        <span>
          <div class="device-footer">
            <img src="/svg/linktree-logo.svg" alt="Logo Linktree">
          </div>
        </span>
      </div>
  </section>
</aside>
</div>
<div id="modal-share" class="modal">
  <div class="modal__container">
    <img src="/svg/close.svg" class="close">
    <h4 class="modal__header">Share your Linktree</h4>
    <p class="modal__header modal__description">Get more visitors by sharing your Linktree everywhere.</p>
    <ul class="modal__container--links">
      <li class="modal__links">
        <div>
          <img src="/img/socials.png" alt="">
          <button>Add Linktree to your socials</button>
        </div>
        <img class="btn__right" src="/svg/right.svg" alt="">
      </li>
      <li class="modal__links">
        <div>
          <img class="svg" src="/svg/share.svg" alt="">
          <button>Share my Linktree to..</button>
        </div>
        <img class="btn__right" src="/svg/right.svg" alt="">
      </li>
      <li class="modal__links">
        <div>
          <img class="svg" src="/svg/qrcode.svg" alt="">
          <button>My Linktree QR Code</button>
        </div>
        <img class="btn__right" src="/svg/right.svg" alt="">
      </li>
    </ul>
    <div class="modal__account">
      <button id="my-account" onclick="myAccount()" value="https://linktr.ee/altair.jesus">
        <div>
          <img class="svg" src="/svg/linktree-min.svg" alt="">
          <p class="modal__logo">linktr.ee/</p>
          <p class="modal__username"><%= usuario.nome_usuario %></p>
        </div>
        <span id="copy">Copy</span>
      </button>
    </div>
  </div>
</div>

<script>
  // Scripts Toggles
  const btnMobile = document.getElementById('btn-mobile'),
    btnDesktop = document.getElementById('btn-desktop'),
    btnHeadway = document.getElementById('btn-headway'),
    btnSupport = document.getElementById('btn-support'),
    nav = document.getElementById('nav__menu'),
    navHeadway = document.getElementById('nav__headway'),
    navSupport = document.getElementById('nav__support'),
    active = nav.classList.contains('active'),
    activeSupport = navSupport.classList.contains('active')

  function toggleMenu(event) {
    if (event.type === 'touchstart') event.preventDefault();
    if (this.id == "btn-mobile" || this.id == "btn-desktop") {
      nav.classList.toggle('active');
    } else if (this.id == "btn-headway") {
      navHeadway.classList.toggle('active');
    }
    else if (this.id == "btn-support") {
      navSupport.classList.toggle('active');
    }
  }

  btnMobile.addEventListener('click', toggleMenu, { passive: true});
  btnDesktop.addEventListener('click', toggleMenu, { passive: true});
  btnHeadway.addEventListener('click', toggleMenu, { passive: true});
  btnSupport.addEventListener('click', toggleMenu, { passive: true});
  btnMobile.addEventListener('touchstart', toggleMenu, { passive: true});
  btnDesktop.addEventListener('touchstart', toggleMenu, { passive: true});
  btnHeadway.addEventListener('touchstart', toggleMenu, { passive: true});
  btnSupport.addEventListener('touchstart', toggleMenu, { passive: true});

  // Script Modal
  function initModal(modalID) {
    const modal = document.getElementById(modalID);
    if (modal) {
      modal.classList.add('show');
      modal.addEventListener('click', (event) => {
        if (event.target.id == modalID || event.target.className == 'close') {
          modal.classList.remove('show');
        }
      })
    }
  }

  const share = document.getElementById('button-share');
  share.addEventListener('click', () => initModal('modal-share'))
  
  // Script copiar conta
  function myAccount() {
    const linkAccount = document.getElementById('my-account'),
      copy = document.getElementById('copy')
    navigator.clipboard.writeText(linkAccount.value)
    copy.innerHTML = "Copied!"
    setTimeout(() => {
      copy.innerHTML = "Copy"
    }, 1500);
  }
  
  // Script para adicionar novos links
  let countClick = 0
  function showFormLink() {

    const btnNewLink = document.getElementById('btn-newLink'),
      divNoLinks = document.getElementById('nolinks'),
      sectionNewLinks = document.getElementById('section__links--new-links'),

      newForm = `<div class="form__container" id="formTemp${countClick}"><img class="form__svg" src="/svg/ellipsis.svg"><form class='form__link' action='/admin' method='post'><input type='text' id="titleTemp${countClick}" name="title" class="title" placeholder='Title'><input type='text' id="urlTemp${countClick}" name="url" placeholder='URL'><button id="btnAddTemp${countClick}" class='btn btn__add' type='submit' disabled >Add</button></form><img class="form__svg btn trash" onclick="removeLink('${countClick}')" src="/svg/trash.svg"/></div>`
      
    // adiciona a class '.disable' somente se o elemento existir na página  
    if (divNoLinks) divNoLinks.classList.add('disable')

    sectionNewLinks.insertAdjacentHTML('afterbegin', newForm)
    countClick++
  }
  
  // Script para remover links
  function removeLink(id) {
    const formLink = document.getElementById(`formTemp${id}`)
    formLink.remove()
  }

  // Script para habilitar edição dos inputs
  function editLink(id){
    // elementos
    const inputTitle = document.getElementById(`title-link-${id}`),
    inputURL = document.getElementById(`url-link-${id}`),
    btnEdit = document.getElementById(`btn-edit-link-${id}`),
    btnCancel = document.getElementById(`btn-cancel-link-${id}`)

    // habilitando inputs
    inputTitle.disabled = false
    inputURL.disabled = false

    // ocultar botão EDIT do forms e exibir botão CANCEL
    btnEdit.classList.toggle('disable')
    btnCancel.classList.toggle('disable')

    // adicionando button 'Save'
    const form = document.querySelector(`#form${id} .form__link form`)
    form.innerHTML += `<button id="btn-update-link-${id}" class="btn btn__add form__button--update" type="submit" disabled>Save</button>`

    validationEditionForm(id)
  }
  
  function cancelEditLink(id){
    // elementos
    const inputTitle = document.getElementById(`title-link-${id}`),
    inputURL = document.getElementById(`url-link-${id}`),
    btnEdit = document.getElementById(`btn-edit-link-${id}`)
    btnCancel = document.getElementById(`btn-cancel-link-${id}`),
    form = document.querySelector(`#form${id} .form__link form`)

    // desabilitando inputs
    inputTitle.disabled = true
    inputURL.disabled = true

    // ocultar botão CANCEL do forms
    btnCancel.classList.toggle('disable')
    btnEdit.classList.toggle('disable')

    // removendo button 'Save'
    document.querySelector(`#form${id} div.form__link button.form__button--update`).remove()

  }

  // Função criada para habilitar o botão "Add" somente se o usuário preencher o Title e URL
  function editFormLinkTemp(){
    const formsTemps = document.querySelectorAll("div[id^='formTemp']")

    formsTemps.forEach((form) => {
      // console.log(form.childNodes[1])
      titleTemp = form.childNodes[1].childNodes[0]
      urlTemp = form.childNodes[1].childNodes[1]
      btnTemp = form.childNodes[1].childNodes[2]

      let count = 0

      if(titleTemp.value) count++
      if(urlTemp.value) count++

      // console.log(count)

      if(count == 2) {
        btnTemp.disabled = false
        btnTemp.style.backgroundColor = "#7c41ff"
      }
    })
  }
  setInterval((editFormLinkTemp), 1000)

  function validationEditionForm(id){
    const title = document.getElementById(`title-link-${id}`),
     url = document.getElementById(`url-link-${id}`),
     btnSave = document.getElementById(`btn-update-link-${id}`)

    const storeTitle = title.value
    const storeURL = url.value
    let update = 0 

    setInterval(() => {
      if((title.value != storeTitle) || (url.value != storeURL)) update = 1
      else update = 0

      if(update == 1 && title.value.length > 0 && url.value.length > 0){
        btnSave.disabled = false
        btnSave.style.backgroundColor = "#7c41ff"
      } else{
        btnSave.disabled = true
        btnSave.style.backgroundColor = "#d7dce1"
      }
    }, 1000);
  }

  function sendUpdate(id){
    const title = document.getElementById(`title-link-${id}`),
     url = document.getElementById(`url-link-${id}`),
     newTitle = document.getElementById(`new-title-link--${id}`),
     newURL = document.getElementById(`new-url-link${id}`)

     newTitle.value = title.value
     newURL.value = url.value

     console.log(newTitle.value);
     console.log(newURL.value)

  }

</script>
</body>
</html>